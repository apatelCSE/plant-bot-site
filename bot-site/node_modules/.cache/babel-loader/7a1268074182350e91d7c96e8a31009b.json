{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anika\\\\Coding_Adventures\\\\bot-o-mat\\\\bot-o-mat-apatelCSE\\\\bot-site\\\\src\\\\containers\\\\TaskCenter.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ListGroup, ListGroupItem, Container, Col } from 'reactstrap';\nimport DangerAlert from '../components/DangerAlert';\n\nclass TaskCenter extends Component {\n  constructor(props) {\n    super(props);\n    this.showAlert = this.showAlert.bind(this);\n  }\n\n  showAlert(id) {\n    const myAlert = /*#__PURE__*/React.createElement(DangerAlert, {\n      text: \"This bot is still working!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    });\n    ReactDOM.render(myAlert, document.getElementById(id));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"TaskCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.botIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \" \", this.props.tasks.map((task, taskIndex) => {\n      return /*#__PURE__*/React.createElement(ListGroupItem, {\n        key: taskIndex,\n        action: true,\n        onClick: () => {\n          // Start task if bot is available, otherwise display error\n          this.props.bot.isActive === false ? this.props.completeTask(task, this.props.botIndex, taskIndex) : this.showAlert(this.props.botIndex);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, `${task.description} (${task.eta / 1000} seconds)`);\n    }))));\n  }\n\n}\n\nexport default TaskCenter;","map":{"version":3,"sources":["C:/Users/Anika/Coding_Adventures/bot-o-mat/bot-o-mat-apatelCSE/bot-site/src/containers/TaskCenter.jsx"],"names":["React","Component","ReactDOM","ListGroup","ListGroupItem","Container","Col","DangerAlert","TaskCenter","constructor","props","showAlert","bind","id","myAlert","render","document","getElementById","botIndex","tasks","map","task","taskIndex","bot","isActive","completeTask","description","eta"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACIC,SADJ,EACeC,aADf,EAC8BC,SAD9B,EAEIC,GAFJ,QAGO,YAHP;AAIA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAC/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDD,EAAAA,SAAS,CAACE,EAAD,EAAK;AACV,UAAMC,OAAO,gBAAG,oBAAC,WAAD;AAChB,MAAA,IAAI,EAAC,4BADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAEAZ,IAAAA,QAAQ,CAACa,MAAT,CAAgBD,OAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAzB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,EAAE,EAAE,KAAKL,KAAL,CAAWQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,SAAP,KAAqB;AACtC,0BACI,oBAAC,aAAD;AACA,QAAA,GAAG,EAAEA,SADL;AAEA,QAAA,MAAM,MAFN;AAEO,QAAA,OAAO,EAAE,MAAM;AAClB;AACA,eAAKZ,KAAL,CAAWa,GAAX,CAAeC,QAAf,KAA4B,KAA5B,GACA,KAAKd,KAAL,CAAWe,YAAX,CAAwBJ,IAAxB,EAA8B,KAAKX,KAAL,CAAWQ,QAAzC,EAAmDI,SAAnD,CADA,GAEA,KAAKX,SAAL,CAAe,KAAKD,KAAL,CAAWQ,QAA1B,CAFA;AAIH,SARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASM,GAAEG,IAAI,CAACK,WAAY,KAAIL,IAAI,CAACM,GAAL,GAAS,IAAK,WAT3C,CADJ;AAaH,KAdD,CADJ,CAJJ,CADJ,CADJ;AA2BH;;AAxC8B;;AA2CnC,eAAenB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    ListGroup, ListGroupItem, Container, \r\n    Col\r\n} from 'reactstrap';\r\nimport DangerAlert from '../components/DangerAlert';\r\n\r\nclass TaskCenter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.showAlert = this.showAlert.bind(this);\r\n    }\r\n\r\n    showAlert(id) {\r\n        const myAlert = <DangerAlert\r\n        text=\"This bot is still working!\" />;\r\n        ReactDOM.render(myAlert, document.getElementById(id));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container className=\"TaskCenter\">\r\n                <Col>\r\n                    {/* Unique div id ensures that error message is assigned to correct task\r\n                        that is over-clicked */}\r\n                    <div id={this.props.botIndex}></div>\r\n                    <ListGroup> {\r\n                        this.props.tasks.map((task, taskIndex) => {\r\n                            return (\r\n                                <ListGroupItem \r\n                                key={taskIndex}\r\n                                action onClick={() => {\r\n                                    // Start task if bot is available, otherwise display error\r\n                                    this.props.bot.isActive === false ?\r\n                                    this.props.completeTask(task, this.props.botIndex, taskIndex):\r\n                                    this.showAlert(this.props.botIndex);\r\n                                    \r\n                                }}>\r\n                                    {`${task.description} (${task.eta/1000} seconds)`}\r\n                                </ListGroupItem>\r\n                            );\r\n                        })\r\n                    }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskCenter;"]},"metadata":{},"sourceType":"module"}