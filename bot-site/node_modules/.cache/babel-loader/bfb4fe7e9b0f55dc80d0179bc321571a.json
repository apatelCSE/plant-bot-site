{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anika\\\\Coding_Adventures\\\\bot-o-mat\\\\bot-o-mat-apatelCSE\\\\bot-site\\\\src\\\\containers\\\\Leaderboard.jsx\";\nimport React, { Component } from 'react';\nimport './Leaderboard.css';\n\nfunction BarGroup(props) {\n  let barPadding = 2;\n  let barColour = '#007bff'; // WidthScale sets width of each bar\n\n  let widthScale = d => d * 50;\n\n  let width = widthScale(props.d.score);\n  let yMid = props.barHeight * 0.5;\n  return /*#__PURE__*/React.createElement(\"g\", {\n    className: \"bar-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"name-label\",\n    x: \"-10\",\n    y: yMid,\n    alignmentBaseline: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.d.name), /*#__PURE__*/React.createElement(\"rect\", {\n    y: barPadding * 0.5,\n    width: width,\n    height: props.barHeight - barPadding,\n    fill: barColour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    className: \"value-label\",\n    x: width + 10,\n    y: yMid,\n    alignmentBaseline: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, props.d.score));\n}\n\nclass BarChart extends Component {\n  render() {\n    let barHeight = 30; // Creates a bar for each active bot\n\n    let barGroups = this.props.bots.map((d, i) => /*#__PURE__*/React.createElement(\"g\", {\n      transform: `translate(0, ${i * barHeight})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(BarGroup, {\n      d: d,\n      barHeight: barHeight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 55\n      }\n    }))); // Size of the SVG depends on the number of bots in the chart\n\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"400\",\n      height: 100 + 25 * this.props.bots.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      className: \"chart\",\n      transform: \"translate(130,25)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, barGroups)));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/Anika/Coding_Adventures/bot-o-mat/bot-o-mat-apatelCSE/bot-site/src/containers/Leaderboard.jsx"],"names":["React","Component","BarGroup","props","barPadding","barColour","widthScale","d","width","score","yMid","barHeight","name","BarChart","render","barGroups","bots","map","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,SAAS,GAAG,SAAhB,CAFqB,CAGrB;;AACA,MAAIC,UAAU,GAAGC,CAAC,IAAIA,CAAC,GAAG,EAA1B;;AAEA,MAAIC,KAAK,GAAGF,UAAU,CAACH,KAAK,CAACI,CAAN,CAAQE,KAAT,CAAtB;AACA,MAAIC,IAAI,GAAGP,KAAK,CAACQ,SAAN,GAAkB,GAA7B;AAEA,sBAAO;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEL;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,CAAC,EAAC,KAA/B;AAAqC,IAAA,CAAC,EAAED,IAAxC;AAA8C,IAAA,iBAAiB,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2EP,KAAK,CAACI,CAAN,CAAQK,IAAnF,CAFK,eAIL;AAAM,IAAA,CAAC,EAAER,UAAU,GAAG,GAAtB;AAA2B,IAAA,KAAK,EAAEI,KAAlC;AAAyC,IAAA,MAAM,EAAEL,KAAK,CAACQ,SAAN,GAAkBP,UAAnE;AAA+E,IAAA,IAAI,EAAEC,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJK,eAML;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,CAAC,EAAEG,KAAK,GAAG,EAAzC;AAA6C,IAAA,CAAC,EAAEE,IAAhD;AAAsD,IAAA,iBAAiB,EAAC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmFP,KAAK,CAACI,CAAN,CAAQE,KAA3F,CANK,CAAP;AAQH;;AAED,MAAMI,QAAN,SAAuBZ,SAAvB,CAAiC;AAC7Ba,EAAAA,MAAM,GAAG;AACP,QAAIH,SAAS,GAAG,EAAhB,CADO,CAEP;;AACA,QAAII,SAAS,GAAG,KAAKZ,KAAL,CAAWa,IAAX,CAAgBC,GAAhB,CAAoB,CAACV,CAAD,EAAIW,CAAJ,kBAAU;AAAG,MAAA,SAAS,EAAG,gBAAeA,CAAC,GAAGP,SAAU,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,CAAC,EAAEJ,CAAb;AAAgB,MAAA,SAAS,EAAEI,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAA9B,CAAhB,CAHO,CAMP;;AACA,wBAAO;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAE,MAAI,KAAG,KAAKR,KAAL,CAAWa,IAAX,CAAgBG,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAqB,MAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,SADH,CADF,CADK,CAAP;AAOD;;AAf4B;;AAkBjC,eAAeF,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './Leaderboard.css';\r\n\r\nfunction BarGroup(props) {\r\n    let barPadding = 2;\r\n    let barColour = '#007bff';\r\n    // WidthScale sets width of each bar\r\n    let widthScale = d => d * 50;\r\n  \r\n    let width = widthScale(props.d.score);\r\n    let yMid = props.barHeight * 0.5;\r\n    \r\n    return <g className=\"bar-group\">\r\n      {/* Name */}\r\n      <text className=\"name-label\" x=\"-10\" y={yMid} alignmentBaseline=\"middle\" >{props.d.name}</text>\r\n      {/* Bar */}\r\n      <rect y={barPadding * 0.5} width={width} height={props.barHeight - barPadding} fill={barColour} />\r\n      {/* Score */}\r\n      <text className=\"value-label\" x={width + 10} y={yMid} alignmentBaseline=\"middle\" >{props.d.score}</text>\r\n    </g>\r\n}\r\n  \r\nclass BarChart extends Component {\r\n    render() {\r\n      let barHeight = 30;\r\n      // Creates a bar for each active bot\r\n      let barGroups = this.props.bots.map((d, i) => <g transform={`translate(0, ${i * barHeight})`}>\r\n                                                      <BarGroup d={d} barHeight={barHeight} />\r\n                                                    </g>)                         \r\n      // Size of the SVG depends on the number of bots in the chart\r\n      return <svg width=\"400\" height={100+25*this.props.bots.length} >\r\n        <g className=\"container\">\r\n          <g className=\"chart\" transform=\"translate(130,25)\">\r\n            {barGroups}\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    }\r\n}\r\n\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}