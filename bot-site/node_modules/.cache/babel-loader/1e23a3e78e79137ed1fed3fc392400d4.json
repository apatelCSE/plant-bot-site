{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anika\\\\Coding_Adventures\\\\bot-o-mat\\\\bot-o-mat-apatelCSE\\\\bot-site\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\nimport './App.css';\nimport { ReactComponent as BotSVG } from \"@svgr/webpack?-svgo,+titleProp,+ref!./assets/bot.svg\";\nimport data from './assets/tasks';\nimport BotForm from './containers/BotForm';\nimport TaskCards from './containers/TaskCards';\nimport Leaderboard from './containers/Leaderboard';\nimport shuffleFive from './utilities/shuffleFive';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bots: [],\n      leaderboardBots: [],\n      newBot: {\n        name: '',\n        // default type\n        type: 'Unipedal'\n      }\n    };\n    this.updateNewBot = this.updateNewBot.bind(this);\n    this.addBotToState = this.addBotToState.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n  }\n\n  // Function updates bot name or type from Bot Initializer\n  updateNewBot(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => {\n      return {\n        newBot: { ...prevState.newBot,\n          [name]: value\n        }\n      };\n    });\n  }\n\n  // Function adds initialized bot from Bot Initializer to the main data\n  addBotToState() {\n    const tasks = data.tasks;\n    const fiveTasks = shuffleFive(tasks);\n    const bots = this.state.bots;\n    const leaderboardBots = this.state.leaderboardBots;\n    const bot = {};\n    const leaderboardBot = {}; // initialize characteristics\n\n    bot.botName = this.state.newBot.name;\n    leaderboardBot.name = this.state.newBot.name;\n    bot.botType = this.state.newBot.type;\n    leaderboardBot.score = 0;\n    bot.score = 0;\n    bot.isActive = false;\n    bot.tasks = fiveTasks;\n    bots.push(bot);\n    leaderboardBots.push(leaderboardBot);\n    this.setState({\n      bots: bots\n    });\n    console.log(bots); // reset default characteristics\n\n    this.setState(prevState => {\n      return {\n        newBot: { ...prevState.newBot,\n          name: '',\n          ...prevState.newBot,\n          type: 'Unipedal'\n        }\n      };\n    });\n  }\n\n  // Function responds to user \"activating\" a task and updates the robot\n  // as the task is timed\n  completeTask(task, botIndex, taskIndex) {\n    const bots = this.state.bots;\n    const leaderboardBots = this.state.leaderboardBots;\n    let TasksToComplete = bots[botIndex].tasks;\n    bots[botIndex].isActive = true;\n    this.setState({\n      bots: bots\n    });\n    setTimeout(() => {\n      TasksToComplete.splice(taskIndex, 1);\n      bots[botIndex].isActive = false;\n      leaderboardBots[botIndex].score++;\n      bots[botIndex].score++;\n      this.setState({\n        bots: bots\n      });\n    }, task.eta);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Welcome to Bot-O-Mat!\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BotSVG, {\n      className: \"svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Bot-O-Mat is a task organizer that allows you to create robots that get your housework done quickly and efficiently. You can start your different robots in the Task Center and see how they measure up against each other in the Leaderboard. Get started by creating your first bot in the Bot Initializer!\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BotForm, {\n      updateNewBot: this.updateNewBot,\n      addBotToState: this.addBotToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"leaderboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, this.state.bots.length ? /*#__PURE__*/React.createElement(Leaderboard, {\n      bots: this.state.leaderboardBots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"There's nothing to show here yet. Create and activate a bot to see its performance here!\")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"Task Center\"), this.state.bots.length ? /*#__PURE__*/React.createElement(TaskCards, {\n      bots: this.state.bots,\n      completeTask: this.completeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"There's nothing to show here yet. Create a bot to see its tasks here!\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anika/Coding_Adventures/bot-o-mat/bot-o-mat-apatelCSE/bot-site/src/App.js"],"names":["React","Component","Container","Row","Col","Jumbotron","data","BotForm","TaskCards","Leaderboard","shuffleFive","App","constructor","props","state","bots","leaderboardBots","newBot","name","type","updateNewBot","bind","addBotToState","completeTask","e","value","target","setState","prevState","tasks","fiveTasks","bot","leaderboardBot","botName","botType","score","isActive","push","console","log","task","botIndex","taskIndex","TasksToComplete","setTimeout","splice","eta","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container, Row, Col, Jumbotron} from 'reactstrap';\r\nimport './App.css';\r\nimport {ReactComponent as BotSVG} from './assets/bot.svg';\r\nimport data                 from './assets/tasks';\r\nimport BotForm              from './containers/BotForm';\r\nimport TaskCards            from './containers/TaskCards';\r\nimport Leaderboard          from './containers/Leaderboard';\r\nimport shuffleFive          from './utilities/shuffleFive';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bots : [],\r\n      leaderboardBots : [],\r\n      newBot: {\r\n        name: '',\r\n        // default type\r\n        type: 'Unipedal',\r\n      },\r\n    };\r\n\r\n    this.updateNewBot = this.updateNewBot.bind(this);\r\n    this.addBotToState = this.addBotToState.bind(this);\r\n    this.completeTask = this.completeTask.bind(this);\r\n  };\r\n\r\n  // Function updates bot name or type from Bot Initializer\r\n  updateNewBot(e) {\r\n    let value = e.target.value;\r\n    let name = e.target.name;\r\n    this.setState( prevState => {\r\n        return {\r\n            newBot : {\r\n                ...prevState.newBot, [name]: value\r\n            }\r\n        }\r\n    })\r\n  };\r\n\r\n  // Function adds initialized bot from Bot Initializer to the main data\r\n  addBotToState() {\r\n    const tasks = data.tasks;\r\n    const fiveTasks = shuffleFive(tasks);\r\n    \r\n    const bots = this.state.bots;\r\n    const leaderboardBots = this.state.leaderboardBots;\r\n    const bot = {};\r\n    const leaderboardBot = {};\r\n\r\n    // initialize characteristics\r\n    bot.botName = this.state.newBot.name;\r\n    leaderboardBot.name = this.state.newBot.name;\r\n    bot.botType = this.state.newBot.type;\r\n    leaderboardBot.score = 0;\r\n    bot.score = 0;\r\n    bot.isActive = false;\r\n    bot.tasks = fiveTasks;\r\n\r\n    bots.push(bot);\r\n    leaderboardBots.push(leaderboardBot);\r\n    this.setState({bots : bots});\r\n    console.log(bots);\r\n    // reset default characteristics\r\n    this.setState( prevState => {\r\n      return {\r\n          newBot : {\r\n              ...prevState.newBot, name: '',\r\n              ...prevState.newBot, type: 'Unipedal'\r\n          }\r\n      }\r\n    })\r\n  };\r\n\r\n  // Function responds to user \"activating\" a task and updates the robot\r\n  // as the task is timed\r\n  completeTask(task, botIndex, taskIndex) {\r\n    const bots = this.state.bots;\r\n    const leaderboardBots = this.state.leaderboardBots;\r\n    let TasksToComplete = bots[botIndex].tasks;\r\n\r\n    bots[botIndex].isActive = true;\r\n    this.setState({bots : bots});\r\n\r\n    setTimeout(() => {\r\n      TasksToComplete.splice(taskIndex, 1);\r\n      bots[botIndex].isActive = false;\r\n      leaderboardBots[botIndex].score++;\r\n      bots[botIndex].score++;\r\n      this.setState({bots : bots});\r\n    }, task.eta);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <Container className=\"App\">\r\n        <Row>\r\n          <Jumbotron>\r\n            <h1 className=\"display-3\">Welcome to Bot-O-Mat!</h1>\r\n            <hr />\r\n            <Col>\r\n              <BotSVG className=\"svg\" />\r\n            </Col>\r\n            <hr />\r\n            <Row>\r\n              <p>Bot-O-Mat is a task organizer that allows you to create robots that get your housework done quickly and efficiently. You can start your different robots in the Task Center and see how they measure up against each other in the Leaderboard. Get started by creating your first bot in the Bot Initializer!</p>\r\n            </Row>\r\n          </Jumbotron>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <BotForm \r\n              updateNewBot = {this.updateNewBot}\r\n              addBotToState = {this.addBotToState}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <h2>Leaderboard</h2>\r\n            <div id=\"leaderboard\">\r\n            {this.state.bots.length ?\r\n            <Leaderboard bots={this.state.leaderboardBots} />\r\n            : <h6>There's nothing to show here yet. Create and activate a bot to see its performance here!</h6>\r\n            }\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col>\r\n          <h2>Task Center</h2>\r\n          {this.state.bots.length ?\r\n            <TaskCards \r\n              bots={this.state.bots}\r\n              completeTask={this.completeTask}/>\r\n          : <h6>There's nothing to show here yet. Create a bot to see its tasks here!</h6>\r\n          }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}